{"version":3,"file":"AssetIndexesUtility.js","mappings":"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","sources":["webpack:///./AssetIndexesUtility.js"],"sourcesContent":["(function ($) {\n  Craft.AssetIndexesUtility = Garnish.Base.extend(\n    {\n      $trigger: null,\n      $form: null,\n\n      totalActions: null,\n      completedActions: null,\n      loadingActions: null,\n      queue: null,\n\n      cacheImages: false,\n      sessionId: null,\n\n      init: function (formId) {\n        this.$form = $('#' + formId);\n        this.$trigger = $('input.submit', this.$form);\n        this.$status = $('.utility-status', this.$form);\n\n        this.addListener(this.$form, 'submit', 'onSubmit');\n      },\n\n      onSubmit: function (ev) {\n        ev.preventDefault();\n\n        if (!this.$trigger.hasClass('disabled')) {\n          if (!this.progressBar) {\n            this.progressBar = new Craft.ProgressBar(this.$status, true);\n          } else {\n            this.progressBar.resetProgressBar();\n          }\n\n          this.totalActions = 0;\n          this.loadingActions = 0;\n          this.completedActions = 0;\n          this.queue = [];\n\n          this.progressBar.$progressBar.removeClass('hidden');\n          this.progressBar.$progressBarStatus.removeClass('hidden');\n\n          this.progressBar.$progressBar.velocity('stop').velocity(\n            {\n              opacity: 1,\n            },\n            {\n              complete: () => {\n                var postData = Garnish.getPostData(this.$form),\n                  params = Craft.expandPostArray(postData);\n                params.start = true;\n\n                this.cacheImages = params.cacheImages;\n\n                Craft.postActionRequest(\n                  'utilities/asset-index-perform-action',\n                  {params},\n                  (response) => {\n                    if (response.indexingData) {\n                      this.sessionId = response.indexingData.sessionId;\n\n                      // Load up all the data\n                      for (\n                        var i = 0;\n                        i < response.indexingData.volumes.length;\n                        i++\n                      ) {\n                        var volumeData = response.indexingData.volumes[i];\n\n                        for (\n                          var requestCounter = 0;\n                          requestCounter < volumeData.total;\n                          requestCounter++\n                        ) {\n                          this.queue.push({\n                            process: true,\n                            sessionId: this.sessionId,\n                            volumeId: volumeData.volumeId,\n                            cacheImages: this.cacheImages,\n                          });\n                          this.totalActions++;\n                        }\n                      }\n\n                      if (this.totalActions > 0) {\n                        this.processIndexing();\n                      } else {\n                        this.finishIndexing();\n                      }\n                    }\n                  }\n                );\n              },\n            }\n          );\n\n          if (this.$allDone) {\n            this.$allDone.css('opacity', 0);\n          }\n\n          this.$trigger.addClass('disabled');\n          this.$trigger.trigger('blur');\n        }\n      },\n\n      updateProgressBar: function () {\n        this.progressBar.setItemCount(this.totalActions);\n        this.progressBar.setProcessedItemCount(this.completedActions);\n        this.progressBar.updateProgressBar();\n      },\n\n      processIndexing: function () {\n        if (\n          this.completedActions + this.loadingActions < this.totalActions &&\n          this.loadingActions < Craft.AssetIndexesUtility.maxConcurrentActions\n        ) {\n          this.loadingActions++;\n\n          var params = this.queue.shift();\n          Craft.postActionRequest(\n            'utilities/asset-index-perform-action',\n            {params},\n            (response) => {\n              this.loadingActions--;\n              this.completedActions++;\n\n              this.updateProgressBar();\n\n              if (response && response.error) {\n                Craft.cp.displayError(response.error);\n              }\n\n              if (this.completedActions == this.totalActions) {\n                this.finishIndexing();\n              } else {\n                this.processIndexing();\n              }\n            }\n          );\n\n          // Try again, in case we have more space.\n          this.processIndexing();\n        }\n      },\n\n      showConfirmDialog: function (data) {\n        var $modal = $('<form class=\"modal fitted confirmmodal\"/>').appendTo(\n            Garnish.$bod\n          ),\n          $body = $('<div class=\"body\"/>').appendTo($modal).html(data.confirm),\n          $footer = $('<footer class=\"footer\"/>').appendTo($modal),\n          $buttons = $('<div class=\"buttons right\"/>').appendTo($footer);\n\n        if (data.showDelete) {\n          let $cancelBtn = $('<button/>', {\n            type: 'button',\n            class: 'btn',\n            text: Craft.t('app', 'Keep them'),\n          }).appendTo($buttons);\n          $('<button/>', {\n            type: 'submit',\n            class: 'btn submit',\n            text: Craft.t('app', 'Delete them'),\n          }).appendTo($buttons);\n\n          this.addListener($cancelBtn, 'click', function () {\n            modal.hide();\n            this.onComplete();\n          });\n        } else {\n          $('<button/>', {\n            type: 'submit',\n            class: 'btn submit',\n            text: Craft.t('app', 'OK'),\n          }).appendTo($buttons);\n        }\n\n        Craft.initUiElements($body);\n\n        var modal = new Garnish.Modal($modal, {\n          hideOnEsc: false,\n          hideOnShadeClick: false,\n        });\n\n        this.addListener($modal, 'submit', function (ev) {\n          ev.preventDefault();\n\n          modal.settings.onHide = $.noop;\n          modal.hide();\n\n          var postData = Garnish.getPostData($body);\n          var params = Craft.expandPostArray(postData);\n\n          $.extend(params, data.params);\n          params.finish = true;\n\n          Craft.postActionRequest(\n            'utilities/asset-index-perform-action',\n            {params},\n            $.noop\n          );\n          this.onComplete();\n        });\n      },\n\n      finishIndexing: function () {\n        var params = {\n          sessionId: this.sessionId,\n          overview: true,\n        };\n\n        Craft.postActionRequest(\n          'utilities/asset-index-perform-action',\n          {params},\n          (response) => {\n            if (response.confirm) {\n              this.hideProgressBar();\n              this.showConfirmDialog(response);\n            } else {\n              this.onComplete();\n            }\n          }\n        );\n      },\n\n      hideProgressBar: function () {\n        this.progressBar.$progressBarStatus.addClass('hidden');\n        this.progressBar.$progressBar.velocity(\n          {opacity: 0},\n          {\n            duration: 'fast',\n          }\n        );\n      },\n\n      onComplete: function () {\n        this.hideProgressBar();\n\n        if (!this.$allDone) {\n          this.$allDone = $(\n            '<div class=\"alldone\" data-icon=\"done\" />'\n          ).appendTo(this.$status);\n          this.$allDone.css('opacity', 0);\n          this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n          this.$trigger.removeClass('disabled');\n          this.$trigger.trigger('focus');\n        }\n      },\n    },\n    {\n      maxConcurrentActions: 3,\n    }\n  );\n})(jQuery);\n"],"names":["$","jQuery","Craft","AssetIndexesUtility","Garnish","Base","extend","$trigger","$form","totalActions","completedActions","loadingActions","queue","cacheImages","sessionId","init","formId","this","$status","addListener","onSubmit","ev","preventDefault","hasClass","progressBar","resetProgressBar","ProgressBar","$progressBar","removeClass","$progressBarStatus","velocity","opacity","complete","postData","getPostData","params","expandPostArray","start","postActionRequest","response","indexingData","i","volumes","length","volumeData","requestCounter","total","push","process","volumeId","processIndexing","finishIndexing","$allDone","css","addClass","trigger","updateProgressBar","setItemCount","setProcessedItemCount","maxConcurrentActions","shift","error","cp","displayError","showConfirmDialog","data","$modal","appendTo","$bod","$body","html","confirm","$footer","$buttons","showDelete","$cancelBtn","type","class","text","t","modal","hide","onComplete","initUiElements","Modal","hideOnEsc","hideOnShadeClick","settings","onHide","noop","finish","overview","hideProgressBar","duration"],"sourceRoot":""}